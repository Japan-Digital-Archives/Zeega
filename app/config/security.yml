security:
    encoders:
        Zeega\UserBundle\Entity\User: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        main:
            entity: { class: Zeega\UserBundle\Entity\User, property: username }
        in_memory:
            users:
                user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        search:
            pattern:  ^/api/search
            anonymous: ~
        tags:    
            pattern: ^/api/tags
            anonymous: ~
        items:  
            pattern: ^/api/items
            anonymous: ~        
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/login$
            anonymous: ~
        node:
            pattern:  ^/node/
            anonymous: ~
        init:
            pattern:  ^/init
            anonymous: ~
        nodes:
            pattern:  ^/nodes
            anonymous: ~
        layers:
            pattern:  ^/layers/
            anonymous: ~
        route:
            pattern:  ^/route/
            anonymous: ~
        search:
            pattern: ^/api/search
            anonymous: ~
        tags:
            pattern: ^/api/tags
            anonymous: ~
        routes:
            pattern:  ^/routes/
            anonymous: ~
        #secured_area:
           # pattern:    ^/
           # form_login:
           #     check_path: /login_check
           #     login_path: /login
          #  logout:
          #      path:   /logout
          #      target: /login
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/_internal, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
